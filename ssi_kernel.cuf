!
!  ssi_kernel.cuf
!
!  CUDA Fortran Source File 
!  Generated by PGI Visual Fortran(R)
!  3/21/2012 11:30:58 PM

! SUBROUTINE SSI(ss,ssd,nssd,ss2,counter)

attributes(global) subroutine ssifunc(ss,ssd,nssd_d,ss2,nz_d,dz_d)
!"Do 5000" loop
implicit none
real, dimension(*):: ss,ssd,ss2,dz_d
real :: depth,dz,tss1,frac,tss2
integer, dimension(*):: nssd_d, nz_d
integer:: nssd,nz
integer:: i,nz2,j

		i = (blockidx%x-1)*blockdim%x + threadidx%x
		nz = nz_d(1)
		
		if (i>nz/2) return
		nssd = nssd_d(1)
        dz = dz_d(1)
     
     !This subroutine performs a linear interpolation in depth of given
     !sound speed profiles to the computational mesh.
     
      
     
      !COMMON nz,ns,dz,dk,dr,rng,freq,c0,sd,arl,thc,depcalc,bdint,dbdint,&
      !    irad,nrad,drad
     
      !return!time=0.38(3000run,1060 continue);time=1,(3000,before cuda)
	  
	  !print *,'s'
      nz2=nz/2
      j=2
      DO i=1,nz2
         depth=(float(i)-.5)*dz
 40      if(depth.le.ssd(j).or.j.ge.nssd) goto 50
         j=j+1
         goto 40
 50      frac=(depth-ssd(j-1))/(ssd(j)-ssd(j-1))
         ss2(i)=ss(j-1)+frac*(ss(j)-ss(j-1))
      END DO
	  !return!time=3.345(3000run,1060 continue);time=3.948,(3000,before cuda)
     
     !Perform 1-2-1 filter over NIT iterations
         tss1=ss2(1)
         DO 200 i=2,nz2-1
            tss2=.25*(ss2(i-1)+ss2(i)+ss2(i)+ss2(i+1))
            ss2(i-1)=tss1
            tss1=tss2
 200     CONTINUE
         ss2(nz2-1)=tss1
     
         RETURN!time=4.99(3000run,1060 continue);time=5.6,(3000,before cuda)
         END subroutine

